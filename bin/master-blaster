#!/usr/bin/env python

# Master Blaster - Rename Primary Branches Of Code Repositories
# Copyright (C) 2020 Gareth Field - field.gareth @ gmail.com

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import questionary
from pathlib import Path
import requests
import getpass
import json
from urllib.parse import urljoin

GITHUB_API = "https://api.github.com"

init = '''
Welcome to master-blaster! This program automatically renames primary branches
from master to main for GitHub users!
'''

username = input("GitHub username: ")
password = getpass.getpass("GitHub password: ")

url = urljoin(GITHUB_API, 'authorizations')
payload = {}

res = requests.post(
    url,
    auth=(username, password),
    data=json.dumps(payload)
)

j = json.loads(res.text)
if res.status_code >= 400:
    msg = j.get('message', "UNDEFINED ERROR (no error description from server)")
    print(f"Error: {msg}")
    exit()
token = j["token"]
print(f"Token : {token}")

# answer = questionary.select(
#     "prompt",
#     choices=[
#         "Option 1",
#         "Option 2",
#         "Option 3"
#     ]
# ).ask()
# prompt = "Check ~/.gitconfig for your GitHub email? "
# checkGitconfig = input(prompt)
# print(checkGitconfig)
# email = ""
# emailStringStart = 0
# if checkGitconfig == "Yes":
#     print("Okay\n")
#     with open(f"{Path.home()}/.gitconfig", 'r') as f:
#         # gitconfig = f.read()
#         # print(gitconfig)
#         found = False
#         for line in f:
#             if line.find("email =") != -1:
#                 print(line)
#                 found = True
#                 emailStringStart = line.find("email =")
#                 print(line[emailStringStart + 8:])
#         if found == False:
#             print("Can't find email!")
# Uhh so, turns out you can't search by email, as that's not a public thing. Wah wah. Lots to learn.
# So username is what we're looking for ... and how to generate an oauth token? I was looking at
# oauth apps, but you can just hit the rest api with an authorization header that's an oauth token

# Oh thank the l ... thanks Jason McVetta!!! https://advanced-python.readthedocs.io/en/latest/rest/authtoken.html

# Oh, fuck me! GitHub is nuking password-based token generation! Doesn't work without 2FA! UMMM okay, either
# ask the user to generate a token manually or launch a browser somehow?!
